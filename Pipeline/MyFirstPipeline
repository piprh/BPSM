#!/bin/bash

#Length of each fastq file
wc -l fastq/*.fq.gz
#Remove previously made files
rm -fr fastqc_out/*fastqc*
rm -fr passfail*
#qc check on one pair of reads
fastqc -o fastqc_out -t 3 fastq/Tco-106*

#Unzip zipped output files
unzip -o fastqc_out/\*.zip -d fastqc_out


 #print the pass/fail lines with file names
find fastqc_out/*fastqc -type f -name "fastqc_data.txt" -exec grep -H "pass\|fail" {} \; >> passfail.txt

#Extract gene names from output
#cut -f2 -d "/" passfail.txt | cut -c1-9

#Modifying passfail.txt
#Setting correct delimiters
while read -r line
do
	#echo "We are working with ${line}"
	field1="${line:11:9}"
	#echo "Field1 is ${field1}"
	field2temp="${line##*>>}" #Take measure + status
	#echo "Field2temp is ${field2temp}"
	field3="${field2temp#*	}" #Take status
	#echo "Field3 is ${field3}"
	field2="${field2temp%%	*}" #Take measure
	#echo "Field2 is ${field2}"
	newline="${field1}\t${field2}\t${field3}" #Combine all fields
	echo "${newline}"
done < passfail.txt > passfailmod.txt #Pass that modification to a new file

#Add column headers
echo -e "Sample\tMeasure\tStatus
$(cat passfailmod.txt)" > passfailmod.txt


############################### Inspecting Problems ####################################################
#Set/Unset variables
unset IFS; unset failed_sample
f_count=0; fnr=0; IFS=$'\t'; 
declare -A failed_sample

#Prompt failed samples
read -p "Display failed modules? (Y/N) " confirm
if [[ $confirm =~ ^[Yy]$ ]]
then
	#show lines in passfailmod.txt where third field is "fail"
	while read sample measure status
	do
		fnr=$((fnr + 1))
		#echo "Line number: ${fnr}"
		#echo "Sample is  ${sample} Measure is ${measure} Status is ${status}"
		if test "${status}" == "fail" 
		then
			f_count=$((f_count + 1))
			echo "Fail number: ${f_count}" 
			failed_sample[${f_count}]="${sample}\t${measure}\t${status}" 
		fi
	done < passfailmod.txt #Finished reading lines checking for "fail"
if test ${fnr} -eq ${inputfilelength}
then
	for each in "${failed_sample[@]}"
	do
	echo -e ${failed_sample} | sort | uniq -c | head #sample x failed x modules
done #End return failed_sample array
fi #End echo faile_sample array
fi #End confirm by user
